{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","App","useState","tel","setTel","otp","setOtp","configCapcha","window","recaptchaVerifier","auth","RecaptchaVerifier","response","onSignInSubmit","console","log","e","preventDefault","phoneNumber","appVerifier","getAuth","signInWithPhoneNumber","then","confirmationResult","catch","error","onSubmit","id","type","name","placeholder","required","onChange","target","value","code","confirm","result","user","JSON","stringify","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAIMA,G,MAAiB,CAErBC,OAHwBC,0CAIxBC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,gBACnBC,MAAO,+CAIPC,IAASC,cAAcT,GACRQ,QAAf,E,gBCqEaE,EAlFH,WACV,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAWMC,EAAe,WACnBC,OAAOC,kBAAoB,IAAIV,EAASW,KAAKC,kBAAkB,iBAAkB,CAC/E,KAAQ,YACR,SAAY,SAACC,GAEXC,IACAC,QAAQC,IAAI,yBAKZF,EAAiB,SAACG,GACtBA,EAAEC,iBACFV,IACA,IAAMW,EAAW,cAAUf,GACrBgB,EAAcX,OAAOC,kBAC3BK,QAAQC,IAAIG,GACZJ,QAAQC,IAAIZ,GACZ,IAAMO,EAAOU,cACbC,YAAsBX,EAAMQ,EAAaC,GACtCG,MAAK,SAACC,GAGLf,OAAOe,mBAAqBA,KAG7BC,OAAM,SAACC,GAGNX,QAAQC,IAAIU,OAmBlB,OACE,gCACE,uCACA,uBAAMC,SAAUb,EAAhB,UACE,qBAAKc,GAAG,mBACR,uBAAOC,KAAK,MAAMC,KAAK,MAAMC,YAAY,YAAYC,UAAQ,EAACC,SA1D5C,SAAChB,GACvBZ,EAAOY,EAAEiB,OAAOC,UA0DZ,wBAASN,KAAK,SAAd,sBAKF,qCACA,uBAAOF,SA3BO,SAACV,GACjBA,EAAEC,iBACF,IAAMkB,EAAO9B,EACjBG,OAAOe,mBAAmBa,QAAQD,GAAMb,MAAK,SAACe,GAE5C,IAAMC,EAAOD,EAAOC,KACpBxB,QAAQC,IAAIwB,KAAKC,UAAUF,IAC3BG,MAAM,6BAELjB,OAAM,SAACC,GAGRX,QAAQC,IAAIU,OAeR,UACE,uBAAOG,KAAK,MAAMC,KAAK,MAAMC,YAAY,MAAMC,UAAQ,EAACC,SAtEtC,SAAChB,GACvBV,EAAOU,EAAEiB,OAAOC,UAsEZ,wBAASN,KAAK,SAAd,2BClEOc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4142268e.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\n\r\nconst {REACT_APP_API_KEY}=process.env;\r\nconst firebaseConfig = {\r\n  \r\n  apiKey: REACT_APP_API_KEY,\r\n  authDomain: \"phone-auth-cbd7f.firebaseapp.com\",\r\n  projectId: \"phone-auth-cbd7f\",\r\n  storageBucket: \"phone-auth-cbd7f.appspot.com\",\r\n  messagingSenderId: \"1054159166239\",\r\n  appId: \"1:1054159166239:web:559e9c1e323b6a72da2e2a\"\r\n};\r\n \r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export default firebase;\r\n\r\n","import React, { useState } from \"react\";\nimport firebase from \"./firebase\";\nimport { getAuth, signInWithPhoneNumber } from \"firebase/auth\";\nconst App = () => {\n  const [tel, setTel] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n\n  const handleOtpChange = (e) => {\n    setOtp(e.target.value);\n    //set the value of \n  };\n  const handleTelChange = (e) => {\n    setTel(e.target.value);\n    \n  };\n\n  const configCapcha = () => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\n      'size': 'invisible',\n      'callback': (response) => {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        onSignInSubmit();\n        console.log(\"Recaptca varified\")\n      },\n      \n    });\n  };\n  const onSignInSubmit = (e) => {\n    e.preventDefault();\n    configCapcha();\n    const phoneNumber = `+251${tel}`;\n    const appVerifier = window.recaptchaVerifier;\n    console.log(phoneNumber);\n    console.log(tel);\n    const auth = getAuth();\n    signInWithPhoneNumber(auth, phoneNumber, appVerifier)\n      .then((confirmationResult) => {\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        window.confirmationResult = confirmationResult;\n        // ...\n      })\n      .catch((error) => {\n        // Error; SMS not sent\n        // ...\n        console.log(error);\n      });\n  };\n\n  const onSubmitOtp=(e)=>{\n    e.preventDefault();\n    const code = otp\nwindow.confirmationResult.confirm(code).then((result) => {\n  // User signed in successfully.\n  const user = result.user;\n  console.log(JSON.stringify(user));\n  alert(\"you are verified Vamos\");\n  // ...\n}).catch((error) => {\n  // User couldn't sign in (bad verification code?)\n  // ...\n  console.log(error);\n});\n  } \n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={onSignInSubmit}>\n        <div id=\"sign-in-button\"></div>\n        <input type=\"tel\" name=\"tel\" placeholder=\"telephone\" required onChange={handleTelChange}/>\n        <button  type=\"submit\">\n          Login\n        </button>\n      </form>\n\n      <h1>OTP</h1>\n      <form  onSubmit={onSubmitOtp} >\n        <input type=\"tel\" name=\"OTP\" placeholder=\"OTP\" required onChange={handleOtpChange}/>\n        <button  type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}